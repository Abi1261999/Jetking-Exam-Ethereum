{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red79\green123\blue61;\red26\green26\blue41;\red172\green172\blue193;
\red70\green137\blue204;\red212\green212\blue212;\red167\green197\blue152;\red194\green126\blue101;\red45\green175\blue118;
\red237\green114\blue173;\red13\green102\blue149;}
{\*\expandedcolortbl;;\cssrgb\c37647\c54510\c30588;\cssrgb\c13333\c13725\c21176;\cssrgb\c72941\c73333\c80000;
\cssrgb\c33725\c61176\c83922;\cssrgb\c86275\c86275\c86275;\cssrgb\c70980\c80784\c65882;\cssrgb\c80784\c56863\c47059;\cssrgb\c19608\c72941\c53725;
\cssrgb\c95294\c54118\c73333;\cssrgb\c0\c47843\c65098;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // SPDX-License-Identifier: MIT\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 pragma\cf4 \strokec4  \cf5 \strokec5 solidity\cf4 \strokec4  \cf6 \strokec6 ^\cf7 \strokec7 0.8.20\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf8 \strokec8 "@openzeppelin/contracts/token/ERC721/ERC721.sol"\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 import\cf4 \strokec4  \cf8 \strokec8 "@openzeppelin/contracts/access/Ownable.sol"\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 contract\cf4 \strokec4  BasicNFTContract \cf5 \strokec5 is\cf4 \strokec4  ERC721\cf6 \strokec6 ,\cf4 \strokec4  ownable\cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf9 \strokec9 public\cf4 \strokec4  minPrice \cf6 \strokec6 =\cf4 \strokec4  \cf7 \strokec7 0.05\cf4 \strokec4  ether\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf9 \strokec9 public\cf4 \strokec4  totalsupply\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 uint256\cf4 \strokec4  \cf9 \strokec9 public\cf4 \strokec4  Maxsupply\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 bool\cf4 \strokec4  \cf9 \strokec9 public\cf4 \strokec4  isMintEnabled\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 mapping\cf6 \strokec6 (\cf5 \strokec5 address\cf4 \strokec4  => \cf5 \strokec5 uint256\cf6 \strokec6 )\cf4 \strokec4  \cf9 \strokec9 public\cf4 \strokec4  mintedWallets\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf10 \strokec10 constructor\cf6 \strokec6 ()\cf4 \strokec4  payableERC721\cf6 \strokec6 (\cf8 \strokec8 '\cf4 \strokec4  Abishek Singh NFT\cf8 \strokec8 '\cf6 \strokec6 ,\cf4 \strokec4  \cf8 \strokec8 '\cf4 \strokec4 ABI\cf8 \strokec8 '\cf6 \strokec6 )\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         maxSupply \cf6 \strokec6 =\cf4 \strokec4  \cf7 \strokec7 2\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  toggleIsMintEnabled\cf6 \strokec6 ()\cf4 \strokec4  \cf9 \strokec9 external\cf4 \strokec4  onlyOwner\cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         isMintEnabled =!isMintEnabled\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 function\cf4 \strokec4  setMaxSupply\cf6 \strokec6 (\cf5 \strokec5 uint256\cf4 \strokec4  _maxsupply\cf6 \strokec6 )\cf4 \strokec4  \cf9 \strokec9 external\cf4 \strokec4  onlyOwner\cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         maxSupply\cf6 \strokec6 =\cf4 \strokec4  _maxsupply\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 function\cf4 \strokec4  mint\cf6 \strokec6 ()\cf4 \strokec4  \cf9 \strokec9 external\cf4 \strokec4  \cf9 \strokec9 payable\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (\cf4 \strokec4 isMintEnabled\cf6 \strokec6 ,\cf4 \strokec4  \cf8 \strokec8 '\cf4 \strokec4 Minting not enabled\cf8 \strokec8 '\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 value \cf6 \strokec6 ==\cf4 \strokec4  minPrice \cf6 \strokec6 ,\cf8 \strokec8 '\cf4 \strokec4 Wrong Price\cf8 \strokec8 '\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (\cf4 \strokec4 mintWallets\cf6 \strokec6 [\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ]\cf4 \strokec4  \cf6 \strokec6 <\cf4 \strokec4  \cf7 \strokec7 1\cf6 \strokec6 ,\cf4 \strokec4  \cf8 \strokec8 '\cf4 \strokec4 exceed max per wallet\cf8 \strokec8 '\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (\cf4 \strokec4 maxsupply \cf6 \strokec6 >\cf4 \strokec4  totalsupply\cf6 \strokec6 ,\cf4 \strokec4  \cf8 \strokec8 '\cf4 \strokec4 Sold Out\cf8 \strokec8 '\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\
\cb3         mintedWallet\cf6 \strokec6 [\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ]++;\cf4 \cb1 \strokec4 \
\cb3         totalSupply\cf6 \strokec6 ++;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint\cf4 \strokec4  tokenID \cf6 \strokec6 =\cf4 \strokec4  totalsupply\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3        _safeMint\cf6 \strokec6 (\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 Sender\cf6 \strokec6 ,\cf4 \strokec4 tokenID\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 \}\cf4 \cb1 \strokec4 \
\
}